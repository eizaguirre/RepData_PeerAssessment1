g+geom_point(alpha = 1/3)+facet_wrap(drv~fl, nrow=2, ncol=6)
g+geom_point(alpha = 1/3)+facet_wrap(drv~fl, nrow=2, ncol=6)+geom_smooth(method="lm",se=FALSE, col="steelblue")
g+geom_point(alpha = 1/3)+facet_wrap(drv~fl, nrow=2, ncol=6)+geom_smooth(method="lm",se=FALSE, col="steelblue")+theme_bw(base_family = "Avenir", base_size = 10)
g+geom_point(alpha = 1/3)+facet_wrap(drv~fl, nrow=2, ncol=6)+geom_smooth(method="lm",se=FALSE, col="steelblue")+theme_bw(base_family = "Times", base_size = 10)
g+geom_point(alpha = 1/3)+facet_wrap(drv~fl, nrow=2, ncol=6)+geom_smooth(method="lm",se=FALSE, col="steelblue")+theme_bw(base_family = "Arial", base_size = 10)
g+geom_point(alpha = 1/3)+facet_wrap(drv~fl, nrow=2, ncol=6)+geom_smooth(method="lm",se=FALSE, col="steelblue")+theme_bw(base_family = "Arial", base_size = 10)+labs(x="DISPL", y="HWY")
g+geom_point(alpha = 1/3)+facet_wrap(drv~fl, nrow=2, ncol=6)+geom_smooth(method="lm",se=FALSE, col="steelblue")+theme_bw(base_family = "Arial", base_size = 10)+labs(x="DISPL", y="HWY", title="MPG")
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(y~x|f, panel = function (x,y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
xyplot(y~x|f, panel = function (x,y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
x <- xyplot(y~x|f, panel = function (x,y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
x <- xyplot(y~x|f, panel = function (x,y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
x <- xyplot(y~x|f, panel = function (x,y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
x <- xyplot(y~x|f)
xyplot(Ozone~Wind|Month, data = airquality, layout = c(5,1))
x<-xyplot(Ozone~Wind|Month, data = airquality, layout = c(5,1))
str(x)
x
x <- xyplot(y~x|f, panel = function (x,y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
xyplot(y~x|f, panel = function (x,y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
x
str(x)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p <- xyplot(Ozone ~ Wind, data = airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g+geom_point(aes(color = "steelblue"))+theme_bw(base_family = "Times")
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
set.seed(1234)
par(mar = c(0,0,0,0))
x<-rnorm(12, mean=rep(1:3, each=4),sd=0.2)
y<-rnorm(12, mean=rep(c(1,2,1), each=4),sd=0.2)
plot(x,y,col="blue", pch=19,cex=2)
text(x+0.05, y+0.05, labels = as.character(1:12))
dataFrame <- data.frame
dataFrame <- data.frame(x = x, y = y)
dataFrame
dist(dataFrame)
distxy<-dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang...)
text(x=x, y=y[hclust$order](max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA,...)
}
dataFrame<-data.frame(x=x,y=y)
distxy<-dist(dataFrame)
hClustering <- hclust(distxy)
myplclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each=4))
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang...)
text(x=x, y=y[hclust$order](max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA,...)
}
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang...)
text(x=x, y=y[hclust$order](max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA,...)
}
myplclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each=4))
myplclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each = 4))
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
...){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang...)
text(x=x, y=y[hclust$order](max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA,...)
}
myplclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each = 4))
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang,...)
text(x=x, y=y[hclust$order](max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA,...)
}
myplclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each = 4))
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
text(x=x, y=y[hclust$order]-(max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], str=90, adj=c(1,0.5), xpd=NA,...)
}
myplclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each = 4))
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
text(x=x, y=y[hclust$order]-(max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], srt=90, adj=c(1,0.5), xpd=NA,...)
}
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...){
y<-rep(hclust$height,2)
x<-as.numeric(hclust$merge)
y<-y[which(x<0)]
x<-x[which(x<0)]
x<-abs(x)
y<-y[order(x)]
x<-x[order(x)]
plot(hclust, labels=FALSE, hang=hang, ...)
text(x=x, y=y[hclust$order]-(max(hclust$height)*hang),labels = lab[hclust$order],
col=lab.col[hclust$order], srt=90, adj=c(1,0.5), xpd=NA,...)
}
myplclust(hClustering, lab=rep(1:3, each=4), lab.col=rep(1:3, each = 4))
dataFrame <- data.frame
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix<-as.matrix(dataFrame)[sample(1:12),]
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
dataMatrix <- as.matrix(dataFrame)
heatmap(dataMatrix)
dataFrame <- data.frame(x=x,y=y)
heatmap(dataMatrix)
set.seed(143)
z<-sample(1:12)
dataMatrix <- as.matrix(dataFrame)[z,]
dataFrame
x<-rnorm(12, mean=rep(1:3, each=4),sd=0.2)
y<-rnorm(12, mean=rep(c(1,2,1), each=4),sd=0.2)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
rm("z")
set.seed(1234)
x<-rnorm(12, mean=rep(1:3, each=4),sd=0.2)
y<-rnorm(12, mean=rep(c(1,2,1), each=4),sd=0.2)
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
set.seed(1234)
par(mar=c(0,0,0,0))
x<-  rnorm(12, mean =rep(1:3, each=4), sd=0.2)
y<-  rnorm(12, mean =rep(c(1,2,1), each=4), sd=0.2)
plot(x,y,col="blue", pch=19, cex=2)
text(x+0.05, y+0.05, labels=as.character(1:12))
dataFrame <- data.frame(x,y)
dataFrame
kmeansObj <- kmeans(dataFrame, centers=3)
names(kmeansObj)
kmeansObj$cluster
par(mar=rep(0.2,4))
plot(x,y, col=kmeansObj$cluster, pch=19, cex=2)
points(kmeansObj$centers, col=1:3, cex=3, lwd=3)
points(kmeansObj$centers, col=1:3, pch=3, cex=3, lwd=3)
plot(x,y, col=kmeansObj$cluster, pch=19, cex=2)
points(kmeansObj$centers, col=1:3, pch=3, cex=3, lwd=3)
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
kmeansObj2 <- kmeans(dataMatrix, centers = 3)
par(mfrow=c(1,2), mar=c(2,4,0.1,0.1))
image(t(dataMatrix)[,nrow(dataMatrix):1], yaxt="n")
image(t(dataMatrix)[,order(kmeansObj$cluster)], yaxt="n")
set.seed(12345)
par(mar= rep(0.2,4))
dataMatrix<-matrix(rnorm(400), nrow=40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar= rep(0.2,4))
heatmap(dataMatrix)
set.seed(678910)
for(1 in 1:40) {
for(i in 1:40) {
conFlip <- rbinom(1,size=1,prob=0.5)
for(i in 1:40) {
coinFlip <- rbinom(1,size=1,prob=0.5)
if(coinFlip) {
dataMatrix[1,] <- dataMatrix[i,]+rep(c(0,3), each=5)
}
}
par(mar= rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
heatmap(dataMatrix)
par(mar= rep(0.2,4))
heatmap(dataMatrix)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
set.seed(678910)
for(i in 1:40) {
coinFlip <- rbinom(1,size=1,prob=0.5)
if(coinFlip) {
dataMatrix[1,] <- dataMatrix[i,]+rep(c(0,3), each=5)
}
}
par(mar= rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
set.seed(678910)
for(i in 1:40) {
coinFlip <- rbinom(1, size=1, prob=0.5)
if (coinFlip) {
dataMatrix[i,] <- dataMatrix[i,]+rep(c(0,3), each=5)
}
}
par(mar= rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow = c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered:1)])
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, xlab = "Row Mean", ylab= "Row", pch=19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab= "Column Mena", pch=19)
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, xlab = "Row Mean", ylab= "Row", pch=19)
install.package("xtable")
install.packages("xtable")
library(xtable)
library(datasets)
data("airquality")
fit <- lm(Ozone~ Wind+Temp+Solar.R, data=airquality)
xt<-xtable(summary(fit))
print(xt, type = "html")
ls
ls=list
ls
rm(ls)
ls()
rm(list=ls())
setwd("C:/Users/eizaguirre/GIT/RepData_PeerAssessment1")
load.csv(Activity.csv)
read.csv(Activity.csv)
read.csv(Activity.csv)
read.csv(activity.csv)
setwd("C:/Users/eizaguirre/GIT/RepData_PeerAssessment1")
read.csv(activity.csv)
read.csv(activity.csv)
read.csv("activity.csv")
activity = read.csv("activity.csv")
activity$steps == NA
count(activity$steps == NA)
length(activity$steps == NA)
which(activity$steps == NA)
length(which(activity$steps == NA))
which(activity$steps == NA)
which(activity$steps)
which(activity$steps <> NA)
activity$steps <> NA
activity$steps == NA
subset(activity$steps == NA)
subset(activity, activity$steps == NA)
length(subset(activity, activity$steps == NA))
activity$steps == NA
table(activity, activity$steps == NA)
table(activity)
subset(activity, activity$steps == NA)
x <- subset(activity, activity$steps == NA)
x
rm("x")
x <- subset(activity, steps == NA)
x <- subset(activity, steps == "NA")
x <- subset(activity, steps == 'NA')
is.na(activity$steps==NA)
which(is.na(activity$steps==NA))
length(which(is.na(activity$steps==NA)))
length(which(is.na(activity$steps)))
is.na(activity$steps)
length(which(is.na(activity$steps)))
hist(activity$steps)
hist(activity$steps, xlab = "Steps", main = "Steps taken each day")
hist(activity$steps, xlab = "Steps", main = "Steps taken each day", col = "red")
hist(activity$steps, xlab = "Steps", main = "Steps taken each day", col = "blue")
hist(activity$steps, xlab = "Steps", main = "Steps taken each day", col = "azure")
View(x)
sum(activity$steps)
sum(activity$steps, is.na==FALSE
)
sum(activity$steps, is.na==FALSE)
sum(activity$steps, is.na==TRUE)
sum(activity$steps, na.rm==TRUE)
sum(activity$steps, na.rm=TRUE)
tapply(activity$date, activity$steps, fun=SUM)
tapply(activity$date, activity$steps, fun=SUM, na.rm=TRUE)
tapply(activity$date, activity$steps na.rm=TRUE, fun=SUM)
tapply(activity$steps, activity$date, fun=SUM)
table(activity$steps, activity$date)
tapply(activity$steps, activity$date, fun=SUM)
aggregate(x$steps, by=x$date, FUN=sum)
aggregate(x$steps, by=list(x$date), FUN=sum)
rm(x)
aggregate(activity$steps, by=activity$date, FUN=sum)
aggregate(activity$steps, by=list(activity$date), FUN=sum)
aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(activity$steps, xlab = "Steps", main = "Steps taken each day", col = "azure")
(aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE))$x
x <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
> hist(activity$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
> hist(x$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
print(x)
print(x$x)
> hist(x$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
> hist(x$x)
hist(activity$steps, xlab = "Steps", main = "Steps taken each day", col = "azure")
> hist(x$x)
hist(x$x)
hist(x$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
hist(x$Group.1, xlab = "Steps", main = "Steps taken each day", col = "azure")
hist(x$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
mean(x$x)
median(x$x)
mean(x$x); median(x$x)
plot(x$Group.1, x$x)
plot(x$Group.1, x$x, type = "l")
plot(x$Group.1, x$x, type = "l")
plot(x$Group.1, x$x, type = "l", xlab="Date", ylab="Steps per Day")
x$Group.1 <- strptime(x$Group.1, "%Y-%m-%d")
x
plot(x$Group.1, x$x, type = "l", xlab="Date", ylab="Steps per Day")
x <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
activity$date <- strptime(activity$date, "%Y-%m-%d")
x <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
x <- aggregate(activity$steps, by=list(group.date = activity$date), FUN=sum, na.rm=TRUE)
x <- aggregate(activity$steps, by=activity$date, FUN=sum, na.rm=TRUE)
x <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
x <- aggregate(activity$steps, by=list(as.factor(activity$date), FUN=sum, na.rm=TRUE)
x <- aggregate(activity$steps, by=list(as.factor(activity$date)), FUN=sum, na.rm=TRUE)
plot(x$Group.1, x$x, type = "l", xlab="Date", ylab="Steps per Day")
activity = read.csv("activity.csv")
plot(activity$interval, activity$steps, type = "l", xlab="Date", ylab="Steps per Day")
plot(activity$interval, activity$steps, type = "l",)
plot(activity$interval, activity$steps, type = "l")
plot(activity$steps, activity$interval, type = "l")
tapply(activity$steps, activity$date, FUN=mean )
plot(activity$steps, activity$interval, type = "l")
tapply(activity$steps, activity$date, FUN=mean )
t <- tapply(activity$steps, activity$date, FUN=mean )
t
rm(t)
t <- tapply(activity$steps, activity$interval, FUN=mean )
t
t <- aggregate(activity$steps, by=list(activity$interval), FUN=sum, na.rm=TRUE)
t
plot(t$Group.1, t$x, type = "l", xlab="Interval", ylab="Steps per Day")
max(t$x)
x$Group.1(maxx$x)
x$Group.1(max(t$x))
t$Group.1(max(t$x))
t$Group.1
t$Group.1(t$x==max(t$x))
tapply(t$Group.1, t$x, FUN=max
)
max(t$x)
t$x==max(t$x)
t$Group.1[t$x==max(t$x),]
t$Group.1[,t$x==max(t$x)]
t$Group.1[,max(t$x)]
t$Group.1[max(t$x),]
t$Group.1[1]
t$Group.1[2]
t$Group.1[,t$x==max(t$x)]
t$Group.1[t$x==max(t$x)]
t$Group.1[835]
t$Group.1[834]
t$Group.1[836]
t
t$Group.1[t$x==max(t$x)]
max(t$x)
activity$steps
activityWithoutNA <- activity
ifelse(is.na(activityWithoutNA$steps), 0, activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps), 0, activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps), 0.1, activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps), 0.1, activityWithoutNA$steps)
t$Group.1[t$x==max(t$x)]
t$x
t
t$x[activityWithoutNA$interval == t$Group.1]
ifelse(is.na(activityWithoutNA$steps), t$x[activityWithoutNA$interval == t$Group.1], activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps), t$x[activityWithoutNA$interval == t$Group.1], activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps), t$x[t$Group.1==activityWithoutNA$interval], activityWithoutNA$steps)
t$x[t$Group.1==activityWithoutNA$interval]
t$x[t$Group.1==activityWithoutNA$interval]
t$x[t$Group.1==5]
t$x[t$Group.1==0]
activityWithoutNA$interval
t$Group.1
ifelse(is.na(activityWithoutNA$steps), t$x[activityWithoutNA$interval == t$Group.1], activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps), t$x[activityWithoutNA$interval == t$Group.1], activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps) && activityWithoutNA$interval == t$Group.1, t$x[activityWithoutNA$interval == t$Group.1], activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps) && activityWithoutNA$interval == t$Group.1, activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps) && activityWithoutNA$interval == t$Group.1, t$x, activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps) && activityWithoutNA$interval == t$Group.1, t$x,)
ifelse(is.na(activityWithoutNA$steps) && activityWithoutNA$interval == t$Group.1, t$x, activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps) & activityWithoutNA$interval == t$Group.1, t$x, activityWithoutNA$steps)
ifelse(is.na(activityWithoutNA$steps) & activityWithoutNA$interval == t$Group.1, t$x, activityWithoutNA$steps)
activityWithoutNA <- ifelse(is.na(activityWithoutNA$steps) & activityWithoutNA$interval == t$Group.1, t$x, activityWithoutNA$steps)
activityWithoutNA
activityWithoutNA
activityWithoutNA <- activity
activityWithoutNA
activityWithoutNA <- activity
activityWithoutNA
head(activityWithoutNA)
activityWithoutNA$steps <- ifelse(is.na(activityWithoutNA$steps) & activityWithoutNA$interval == t$Group.1, t$x, activityWithoutNA$steps)
head(activityWithoutNA)
activityWithoutNA
activityWithoutNA$steps <- ifelse(is.na(activityWithoutNA$steps) & activityWithoutNA$interval == t$Group.1, t$x, activityWithoutNA$steps)
x2 <- aggregate(activityWithoutNA$steps, by=list(activityWithoutNA$date), FUN=sum)
hist(x2$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
x2
activity[complete.cases]
activity[complete.cases(activity)]
activity[complete.cases(activity[1,])]
activity[complete.cases(activity[,1])]
activity[complete.cases(activity),]
weekdays(activityWithoutNA$date)
weekdays(strptime(activityWithoutNA$date, "%Y-%m-%d")
)
weekdays(strptime(activityWithoutNA$date, "%Y-%m-%d"))
activityWithoutNA$weekday  <- weekdays(strptime(activityWithoutNA$date, "%Y-%m-%d"))
par(mfrow = c(2,1))
hist(x2$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
hist(x2$x, xlab = "Steps", main = "Steps taken each day", col = "azure")
activityWithoutNA$weekday  <- as.factor(weekdays(strptime(activityWithoutNA$date, "%Y-%m-%d")))
activityWithoutNAWeekDay <- activityWithoutNA[!(activityWithoutNA$weekday %in% c("Saturday","Sunday")),]
activityWithoutNAWeekDay <- activityWithoutNA[activityWithoutNA$weekday %in% c("Saturday","Sunday"),]
activityWithoutNAWeekDay <- activityWithoutNA[!(activityWithoutNA$weekday %in% c("Saturday","Sunday")),]
activityWithoutNAWeekEnd <- activityWithoutNA[!(activityWithoutNA$weekday %in% c("Saturday","Sunday")),]
activityWithoutNAWeekEnd <- activityWithoutNA[activityWithoutNA$weekday %in% c("Saturday","Sunday"),]
View(activityWithoutNAWeekDay)
View(activityWithoutNAWeekEnd)
plot(t3$Group.1, t3$x, type = "l", xlab="Interval", ylab="Number of Steps", main = "Weekends")
rm(list=ls())
